name: tvify

on:
  pull_request:
 
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
     

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          # channel: "beta" # 'dev', 'alpha', default to: 'stable'
          flutter-version: "3.19.3" # you can also specify exact version of flutter

      # Get flutter dependencies.
      - run: flutter pub get

      # # Check for any formatting issues in the code.
      # - run: flutter format --set-exit-if-changed .

      # Generate build and mock files

      - name: Run code generation
        run: flutter pub pub run build_runner build --delete-conflicting-outputs

      # # Run tests for our flutter project.
      # - run: flutter test --no-sound-null-safety --coverage
      # - uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage/lcov.info

      # - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
      #   with:
      #     path: "./coverage/lcov.info"
      #     min_coverage: 50
      #     exclude: "**/*_observer.dart **/change.dart **/*_notifier.dart"

      # # Build apk.
      # - run: |
      #     mkdir $HOME/secrets
      #     gpg --quiet --batch --yes --decrypt --passphrase="$SECRET_PASSPHRASE" \
      #     --output $HOME/secrets/secrets.tar secrets.tar.gpg
      #     tar xvf $HOME/secrets/secrets.tar
      #     flutter build apk --no-sound-null-safety
      #   env:
      #     SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}

      # # Upload generated apk to the artifacts.
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: release-apk
      #     path: build/app/outputs/apk/release/app-release.apk
